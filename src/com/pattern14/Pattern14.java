package com.pattern14;

public class Pattern14 {

    //模式 是在某情景(context)下，针对某问题的某种解决方案
    //情景 就是应用某个模式的情况
    //问题 是你想在某情景下达到的目标
    //解决方案 所追求的:一个通用的设计，用来解决约束，达到目标

    //桥接模式 不只改变你的实现，也改变你的抽象
    //生成器/建造者模式 封装一个产品的构造过程，并允许按步骤构造
    //责任链模式 让一个以上的对象有机会能够处理某个请求
    //享元模式
    //中介者模式(Mediator Pattern) 集中相关对象之间的复杂的沟通和控制方式
    //原型模式(Prototype Pattern) 当创建给定类的实例的过程很昂贵或很复杂时
    //访问者模式
    //备忘录模式
    public static void main(String[] args) {

    }
}
